/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "",
  "description": "",
  "base": "/",
  "headTags": [],
  "pages": [
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "/hero.png",
        "heroText": "Hero 标题",
        "tagline": "Hero 副标题",
        "actionText": "快速上手 →",
        "actionLink": "/guide/",
        "features": [
          {
            "title": "简洁至上",
            "details": "以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。"
          },
          {
            "title": "Vue驱动",
            "details": "享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。"
          },
          {
            "title": "高性能",
            "details": "VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2018-present Evan You"
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-3c862d6a",
      "path": "/"
    },
    {
      "title": "ReadMe",
      "frontmatter": {},
      "regularPath": "/guide/",
      "relativePath": "guide/README.md",
      "key": "v-18e6245e",
      "path": "/guide/"
    },
    {
      "title": "闭包进阶应用（4）-compose 组合函数（面试题）",
      "frontmatter": {},
      "regularPath": "/part1/fifteen.html",
      "relativePath": "part1/fifteen.md",
      "key": "v-37717da3",
      "path": "/part1/fifteen.html"
    },
    {
      "title": "JS 中 this 几种基本情况",
      "frontmatter": {},
      "regularPath": "/part1/eight.html",
      "relativePath": "part1/eight.md",
      "key": "v-b84e853a",
      "path": "/part1/eight.html"
    },
    {
      "title": "JS 函数中的 arguments 以及匿名函数具名化的问题",
      "frontmatter": {},
      "regularPath": "/part1/eleven.html",
      "relativePath": "part1/eleven.md",
      "key": "v-237ddeab",
      "path": "/part1/eleven.html"
    },
    {
      "title": "闭包及浏览器垃圾回收机制",
      "frontmatter": {},
      "regularPath": "/part1/four.html",
      "relativePath": "part1/four.md",
      "key": "v-156bec61",
      "path": "/part1/four.html",
      "headers": [
        {
          "level": 2,
          "title": "GC(Garbage Collection)",
          "slug": "gc-garbage-collection"
        },
        {
          "level": 2,
          "title": "闭包（Closure）",
          "slug": "闭包-closure"
        }
      ]
    },
    {
      "title": "从一个例子图解彻底了解闭包机制",
      "frontmatter": {},
      "regularPath": "/part1/five.html",
      "relativePath": "part1/five.md",
      "key": "v-31ca656e",
      "path": "/part1/five.html"
    },
    {
      "title": "彻底弄懂 JS 4 大数据类型转换",
      "frontmatter": {},
      "regularPath": "/part1/nine.html",
      "relativePath": "part1/nine.md",
      "key": "v-625ced6e",
      "path": "/part1/nine.html"
    },
    {
      "title": "全面分析 let 和 var 和 const",
      "frontmatter": {},
      "regularPath": "/part1/seven.html",
      "relativePath": "part1/seven.md",
      "key": "v-3f27ddba",
      "path": "/part1/seven.html"
    },
    {
      "title": "基本数据类型",
      "frontmatter": {},
      "regularPath": "/part1/one.html",
      "relativePath": "part1/one.md",
      "key": "v-8cef33fa",
      "path": "/part1/one.html",
      "headers": [
        {
          "level": 2,
          "title": "JS中的数据类型",
          "slug": "js中的数据类型"
        },
        {
          "level": 3,
          "title": "JS 数据类型共有 7 种基本数据类型， 2 种引用数据类型",
          "slug": "js-数据类型共有-7-种基本数据类型-2-种引用数据类型"
        },
        {
          "level": 3,
          "title": "NaN",
          "slug": "nan"
        },
        {
          "level": 3,
          "title": "Symbol",
          "slug": "symbol"
        },
        {
          "level": 3,
          "title": "bigint",
          "slug": "bigint"
        },
        {
          "level": 3,
          "title": "typeof 检测数据类型局限性",
          "slug": "typeof-检测数据类型局限性"
        }
      ]
    },
    {
      "title": "闭包进阶应用（3）-重写 reduce；柯里化函数思想；两道面试题",
      "frontmatter": {},
      "regularPath": "/part1/fourteen.html",
      "relativePath": "part1/fourteen.md",
      "key": "v-211e292d",
      "path": "/part1/fourteen.html"
    },
    {
      "title": "循环事件绑定的解决方法",
      "frontmatter": {},
      "regularPath": "/part1/six.html",
      "relativePath": "part1/six.md",
      "key": "v-60d9ec83",
      "path": "/part1/six.html"
    },
    {
      "title": "JS 中的变量提升中的难题",
      "frontmatter": {},
      "regularPath": "/part1/ten.html",
      "relativePath": "part1/ten.md",
      "key": "v-497b80a3",
      "path": "/part1/ten.html"
    },
    {
      "title": "函数的底层处理机制",
      "frontmatter": {},
      "regularPath": "/part1/three.html",
      "relativePath": "part1/three.md",
      "key": "v-7e9f1d7a",
      "path": "/part1/three.html",
      "headers": [
        {
          "level": 3,
          "title": "创建一个函数和创建一个变量类似：",
          "slug": "创建一个函数和创建一个变量类似"
        },
        {
          "level": 3,
          "title": "函数执行的步骤",
          "slug": "函数执行的步骤"
        },
        {
          "level": 3,
          "title": "私有变量  全局变量：",
          "slug": "私有变量-全局变量"
        },
        {
          "level": 3,
          "title": "作用域链查找机制：",
          "slug": "作用域链查找机制"
        }
      ]
    },
    {
      "title": "闭包进阶应用（1）-循环处理和单例设计模式",
      "frontmatter": {},
      "regularPath": "/part1/twelve.html",
      "relativePath": "part1/twelve.md",
      "key": "v-e865480a",
      "path": "/part1/twelve.html"
    },
    {
      "title": "浏览器运行机制",
      "frontmatter": {},
      "regularPath": "/part1/two.html",
      "relativePath": "part1/two.md",
      "key": "v-1a6bf843",
      "path": "/part1/two.html",
      "headers": [
        {
          "level": 2,
          "title": "浏览器底层运行机制",
          "slug": "浏览器底层运行机制"
        },
        {
          "level": 2,
          "title": "声明变量时的运行机制",
          "slug": "声明变量时的运行机制"
        },
        {
          "level": 2,
          "title": "创建引用数据类型值",
          "slug": "创建引用数据类型值"
        },
        {
          "level": 2,
          "title": "全局对象 GO global object",
          "slug": "全局对象-go-global-object"
        },
        {
          "level": 2,
          "title": "运算顺序处理",
          "slug": "运算顺序处理"
        }
      ]
    },
    {
      "title": "闭包进阶应用（2）-惰性思想",
      "frontmatter": {},
      "regularPath": "/part1/thirteen.html",
      "relativePath": "part1/thirteen.md",
      "key": "v-2bf829bf",
      "path": "/part1/thirteen.html"
    }
  ],
  "themeConfig": {
    "sidebar": [
      {
        "title": "JS中的堆栈内存及闭包作用域",
        "collapsable": true,
        "sidebarDepth": 1,
        "children": [
          "/part1/one",
          "part1/two",
          "part1/three",
          "part1/four",
          "part1/five",
          "part1/six",
          "part1/seven",
          "part1/eight",
          "part1/nine",
          "part1/ten",
          "part1/eleven",
          "part1/twelve",
          "part1/thirteen",
          "part1/fourteen",
          "part1/fifteen"
        ]
      }
    ]
  }
}